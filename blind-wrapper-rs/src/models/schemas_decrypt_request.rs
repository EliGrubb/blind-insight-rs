/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SchemasDecryptRequest {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "owner")]
    pub owner: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "schema")]
    pub schema: serde_json::Value,
}

impl SchemasDecryptRequest {
    pub fn new(id: String, owner: String, name: String, schema: serde_json::Value) -> SchemasDecryptRequest {
        SchemasDecryptRequest {
            id,
            owner,
            name,
            schema,
        }
    }
}

