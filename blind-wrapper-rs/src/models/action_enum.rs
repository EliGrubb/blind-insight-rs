/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_repr::{Serialize_repr,Deserialize_repr};
/// ActionEnum : * `0` - create * `1` - update * `2` - delete * `3` - access
/// * `0` - create * `1` - update * `2` - delete * `3` - access
#[repr(i64)]
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr)]
pub enum ActionEnum {
    Variant0 = 0,
    Variant1 = 1,
    Variant2 = 2,
    Variant3 = 3,

}

impl std::fmt::Display for ActionEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", match self {
            Self::Variant0 => "0",
            Self::Variant1 => "1",
            Self::Variant2 => "2",
            Self::Variant3 => "3",
        })
    }
}
impl Default for ActionEnum {
    fn default() -> ActionEnum {
        Self::Variant0
    }
}

