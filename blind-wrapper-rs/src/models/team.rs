/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Team : Team object denoting permissions within an organization.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Team {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "organization")]
    pub organization: String,
    #[serde(rename = "members")]
    pub members: Vec<String>,
    /// A human-readable name for this team.
    #[serde(rename = "name")]
    pub name: String,
    /// A unique slug for this team.
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
}

impl Team {
    /// Team object denoting permissions within an organization.
    pub fn new(id: String, url: String, organization: String, members: Vec<String>, name: String) -> Team {
        Team {
            id,
            url,
            organization,
            members,
            name,
            slug: None,
        }
    }
}

