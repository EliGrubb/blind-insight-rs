/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatusRetrieve200Response {
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "api_version", skip_serializing_if = "Option::is_none")]
    pub api_version: Option<String>,
    #[serde(rename = "behind_proxy", skip_serializing_if = "Option::is_none")]
    pub behind_proxy: Option<bool>,
}

impl StatusRetrieve200Response {
    pub fn new() -> StatusRetrieve200Response {
        StatusRetrieve200Response {
            status: None,
            api_version: None,
            behind_proxy: None,
        }
    }
}

