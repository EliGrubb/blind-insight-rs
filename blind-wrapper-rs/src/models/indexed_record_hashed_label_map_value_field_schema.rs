/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexedRecordHashedLabelMapValueFieldSchema {
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "minimum", skip_serializing_if = "Option::is_none")]
    pub minimum: Option<f64>,
    #[serde(rename = "maximum", skip_serializing_if = "Option::is_none")]
    pub maximum: Option<f64>,
}

impl IndexedRecordHashedLabelMapValueFieldSchema {
    pub fn new(r#type: String) -> IndexedRecordHashedLabelMapValueFieldSchema {
        IndexedRecordHashedLabelMapValueFieldSchema {
            r#type,
            minimum: None,
            maximum: None,
        }
    }
}

