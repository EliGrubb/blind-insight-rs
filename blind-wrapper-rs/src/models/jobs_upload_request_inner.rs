/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobsUploadRequestInner {
    /// The data to be encrypted and stored as a record
    #[serde(rename = "data")]
    pub data: std::collections::HashMap<String, models::JobsUploadRequestInnerDataValue>,
    /// The schema URL for the record
    #[serde(rename = "schema")]
    pub schema: String,
}

impl JobsUploadRequestInner {
    pub fn new(data: std::collections::HashMap<String, models::JobsUploadRequestInnerDataValue>, schema: String) -> JobsUploadRequestInner {
        JobsUploadRequestInner {
            data,
            schema,
        }
    }
}

