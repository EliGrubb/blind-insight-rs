/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MaterialsReceiveDetail200Response {
    /// The request ID
    #[serde(rename = "request")]
    pub request: String,
    /// The schema ID
    #[serde(rename = "schema")]
    pub schema: String,
    /// Name of the field
    #[serde(rename = "field_name")]
    pub field_name: String,
}

impl MaterialsReceiveDetail200Response {
    pub fn new(request: String, schema: String, field_name: String) -> MaterialsReceiveDetail200Response {
        MaterialsReceiveDetail200Response {
            request,
            schema,
            field_name,
        }
    }
}

