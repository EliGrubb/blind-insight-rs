/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PatchedOrganizationUpdate : Update an Organization, allowing for the owner to be changed.  Since an Owner is a 1:1 relationship, we can't use the default `NestedHyperlinkedRelatedField` and must change it to an `OrganizationUser` queryset limited to organization members.  The `to_representation()` method is overloaded to return the correct URL for the owner.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PatchedOrganizationUpdate {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    #[serde(rename = "organization_users", skip_serializing_if = "Option::is_none")]
    pub organization_users: Option<Vec<String>>,
    /// A unique ID used to identify this organization
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
    /// A human-readable name for this organization
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "is_active", skip_serializing_if = "Option::is_none")]
    pub is_active: Option<bool>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    #[serde(rename = "modified", skip_serializing_if = "Option::is_none")]
    pub modified: Option<String>,
}

impl PatchedOrganizationUpdate {
    /// Update an Organization, allowing for the owner to be changed.  Since an Owner is a 1:1 relationship, we can't use the default `NestedHyperlinkedRelatedField` and must change it to an `OrganizationUser` queryset limited to organization members.  The `to_representation()` method is overloaded to return the correct URL for the owner.
    pub fn new() -> PatchedOrganizationUpdate {
        PatchedOrganizationUpdate {
            id: None,
            url: None,
            owner: None,
            organization_users: None,
            slug: None,
            name: None,
            is_active: None,
            created: None,
            modified: None,
        }
    }
}

