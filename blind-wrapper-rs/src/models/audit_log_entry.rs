/*
 * Blind Insight REST API
 *
 * End-to-end encrypted datastore
 *
 * The version of the OpenAPI document: 10.6.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AuditLogEntry : Serializer for the AuditLogEntry model.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuditLogEntry {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "model")]
    pub model: String,
    #[serde(rename = "object_pk")]
    pub object_pk: String,
    #[serde(rename = "object_repr")]
    pub object_repr: String,
    #[serde(rename = "action")]
    pub action: models::ActionEnum,
    #[serde(rename = "changes_text", skip_serializing_if = "Option::is_none")]
    pub changes_text: Option<String>,
    #[serde(rename = "changes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub changes: Option<Option<serde_json::Value>>,
    #[serde(rename = "cid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cid: Option<Option<String>>,
    #[serde(rename = "remote_addr", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub remote_addr: Option<Option<String>>,
    #[serde(rename = "remote_port", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub remote_port: Option<Option<i32>>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    #[serde(rename = "actor_email", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub actor_email: Option<Option<String>>,
    #[serde(rename = "actor", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub actor: Option<Option<String>>,
}

impl AuditLogEntry {
    /// Serializer for the AuditLogEntry model.
    pub fn new(id: i32, model: String, object_pk: String, object_repr: String, action: models::ActionEnum) -> AuditLogEntry {
        AuditLogEntry {
            id,
            model,
            object_pk,
            object_repr,
            action,
            changes_text: None,
            changes: None,
            cid: None,
            remote_addr: None,
            remote_port: None,
            timestamp: None,
            actor_email: None,
            actor: None,
        }
    }
}

